import tweepy
import re
import nltk
from textblob import TextBlob
from wordcloud import WordCloud
import matplotlib.pyplot as plt

# Twitter API credentials (replace with your own)
consumer_key = 'YOUR_CONSUMER_KEY'
consumer_secret = 'YOUR_CONSUMER_SECRET'
access_token = 'YOUR_ACCESS_TOKEN'
access_token_secret = 'YOUR_ACCESS_TOKEN_SECRET'

# Authenticate with Twitter API
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)

# Define the search query and number of tweets to analyze
search_query = "data science"
num_tweets = 100

# Collect tweets
tweets = []
for tweet in tweepy.Cursor(api.search, q=search_query, lang="en").items(num_tweets):
    tweets.append(tweet.text)

# Text preprocessing and sentiment analysis
def clean_tweet(tweet):
    return ' '.join(re.sub("(@[A-Za-z0-9]+)|([^0-9A-Za-z \t])|(\w+:\/\/\S+)", " ", tweet).split())

def analyze_sentiment(tweet):
    analysis = TextBlob(clean_tweet(tweet))
    if analysis.sentiment.polarity > 0:
        return 'positive'
    elif analysis.sentiment.polarity == 0:
        return 'neutral'
    else:
        return 'negative'

positive_tweets = [tweet for tweet in tweets if analyze_sentiment(tweet) == 'positive']
negative_tweets = [tweet for tweet in tweets if analyze_sentiment(tweet) == 'negative']
neutral_tweets = [tweet for tweet in tweets if analyze_sentiment(tweet) == 'neutral']

# Visualize sentiment distribution
labels = ['Positive', 'Negative', 'Neutral']
sizes = [len(positive_tweets), len(negative_tweets), len(neutral_tweets)]
colors = ['green', 'red', 'blue']

plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=140)
plt.axis('equal')
plt.title('Sentiment Analysis for Twitter Data')
plt.show()

# Create a Word Cloud for positive and negative tweets
def plot_wordcloud(tweets, title):
    wordcloud = WordCloud(width=800, height=800, background_color='white').generate(' '.join(tweets))
    plt.figure(figsize=(8, 8), facecolor=None)
    plt.imshow(wordcloud)
    plt.axis("off")
    plt.tight_layout(pad=0)
    plt.title(title)
    plt.show()

plot_wordcloud(positive_tweets, 'Positive Tweets Word Cloud')
plot_wordcloud(negative_tweets, 'Negative Tweets Word Cloud')
